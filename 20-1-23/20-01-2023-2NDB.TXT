mysql> \! cls;
mysql> 
mysql> 
mysql> SELECT * FROM EMP WHERE SAL IN(SELECT MIN(SAL) FROM EMP);
+-------+-------+-------+------+------------+------+------+--------+
| EMPNO | ENAME | job   | MGR  | HIREDATE   | SAL  | COMM | DEPTNO |
+-------+-------+-------+------+------------+------+------+--------+
|  7369 | SMITH | CLERK | 7902 | 1980-12-17 |  800 | NULL |     20 |
+-------+-------+-------+------+------------+------+------+--------+
1 row in set (0.00 sec)

mysql> EXPLAIN FORMAT=TREE SELECT * FROM EMP WHERE SAL IN(SELECT MIN(SAL) FROM EMP);

||

| -> Filter: <in_optimizer>(emp.SAL,emp.SAL in (select #2))  (cost=1.65 rows=14)
    -> Table scan on EMP  (cost=1.65 rows=14)
    -> Select #2 (subquery in condition; run only once)
        -> Filter: ((emp.SAL = `<materialized_subquery>`.`MIN(SAL)`))  (cost=3.25..3.25 rows=1)
            -> Limit: 1 row(s)  (cost=3.15..3.15 rows=1)
                -> Index lookup on <materialized_subquery> using <auto_distinct_key> (MIN(SAL)=emp.SAL)
                    -> Materialize with deduplication  (cost=3.15..3.15 rows=1)
                        -> Aggregate: min(emp.SAL)  (cost=3.05 rows=1)
                            -> Table scan on EMP  (cost=1.65 rows=14)
 |

1 row in set (0.00 sec)

mysql> EXPLAIN FORMAT=TREE SELECT * FROM EMP WHERE SAL =(SELECT MIN(SAL) FROM EMP);
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| EXPLAIN                                                                                                                                                                                                                                                                    |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| -> Filter: (emp.SAL = (select #2))  (cost=1.65 rows=1)
    -> Table scan on EMP  (cost=1.65 rows=14)
    -> Select #2 (subquery in condition; run only once)
        -> Aggregate: min(emp.SAL)  (cost=3.05 rows=1)
            -> Table scan on EMP  (cost=1.65 rows=14)
 |
+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mysql> SELECT ENAME,SAL,DEPTNO
    -> FROM EMP WHERE SAL>(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
ERROR 1054 (42S22): Unknown column 'E.DEPTNO' in 'where clause'
mysql> SELECT ENAME,SAL,DEPTNO
    -> FROM EMP E WHERE SAL>(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
+-------+------+--------+
| ENAME | SAL  | DEPTNO |
+-------+------+--------+
| ALLEN | 1600 |     30 |
| JONES | 2975 |     20 |
| BLAKE | 2850 |     30 |
| SCOTT | 3000 |     20 |
| KING  | 5000 |     10 |
| FORD  | 3000 |     20 |
+-------+------+--------+
6 rows in set (0.00 sec)

mysql> EXPLAIN FORMAT=TREE
    -> SELECT ENAME,SAL,DEPTNO
    -> FROM EMP E WHERE SAL>(SELECT AVG(SAL) FROM EMP WHERE DEPTNO=E.DEPTNO);
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| EXPLAIN                                                                                                                                                                                                                                                                                                |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| -> Filter: (e.SAL > (select #2))  (cost=1.65 rows=14)
    -> Table scan on E  (cost=1.65 rows=14)
    -> Select #2 (subquery in condition; dependent)
        -> Aggregate: avg(emp.SAL)  (cost=1.43 rows=1)
            -> Index lookup on EMP using fk_deptno (DEPTNO=e.DEPTNO)  (cost=0.97 rows=5)
 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set, 1 warning (0.00 sec)

mysql> SELECT E.ENAME,E.SAL,E.DEPTNO,M.AVSAL
    -> FROM   EMP E JOIN (SELECT DEPTNO,AVG(SAL)AVSAL
    ->                    FROM  EMP
    ->                    GROUP BY DEPTNO)M
    -> ON E.DEPTNO=M.DEPTNO
    -> AND E.SAL>M.AVSAL;
+-------+------+--------+--------------------+
| ENAME | SAL  | DEPTNO | AVSAL              |
+-------+------+--------+--------------------+
| ALLEN | 1600 |     30 | 1566.6666666666667 |
| JONES | 2975 |     20 |               2175 |
| BLAKE | 2850 |     30 | 1566.6666666666667 |
| SCOTT | 3000 |     20 |               2175 |
| KING  | 5000 |     10 | 2916.6666666666665 |
| FORD  | 3000 |     20 |               2175 |
+-------+------+--------+--------------------+
6 rows in set (0.00 sec)

mysql> EXPLAIN FORMAT=TREE
    ->  SELECT E.ENAME,E.SAL,E.DEPTNO,M.AVSAL
    ->  FROM   EMP E JOIN (SELECT DEPTNO,AVG(SAL)AVSAL
    ->                     FROM  EMP
    ->                     GROUP BY DEPTNO)M
    ->  ON E.DEPTNO=M.DEPTNO
    ->  AND E.SAL>M.AVSAL;
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| EXPLAIN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| -> Nested loop inner join  (cost=11.45 rows=9)
    -> Filter: (e.DEPTNO is not null)  (cost=1.65 rows=14)
        -> Table scan on E  (cost=1.65 rows=14)
    -> Filter: (e.SAL > m.AVSAL)  (cost=0.50..0.50 rows=1)
        -> Covering index lookup on M using <auto_key0> (DEPTNO=e.DEPTNO)
            -> Materialize  (cost=4.45..4.45 rows=14)
                -> Group aggregate: avg(emp.SAL)  (cost=3.05 rows=14)
                    -> Index scan on EMP using fk_deptno  (cost=1.65 rows=14)
 |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mysql> show create table emp;
+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Table | Create Table                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| emp   | CREATE TABLE `emp` (
  `EMPNO` int NOT NULL,
  `ENAME` varchar(10) DEFAULT NULL,
  `job` varchar(20) DEFAULT NULL,
  `MGR` int DEFAULT NULL,
  `HIREDATE` date DEFAULT NULL,
  `SAL` float DEFAULT NULL,
  `COMM` float DEFAULT NULL,
  `DEPTNO` int DEFAULT NULL,
  PRIMARY KEY (`EMPNO`),
  KEY `fk_deptno` (`DEPTNO`),
  CONSTRAINT `fk_deptno` FOREIGN KEY (`DEPTNO`) REFERENCES `dept` (`DEPTNO`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci |
+-------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row in set (0.00 sec)

mysql> show engines;
+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |
+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |
| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |
| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |
| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |
| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |
| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |
| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |
| ndbinfo            | NO      | MySQL Cluster system information storage engine                | NULL         | NULL | NULL       |
| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |
| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |
| ndbcluster         | NO      | Clustered, fault-tolerant tables                               | NULL         | NULL | NULL       |
+--------------------+---------+----------------------------------------------------------------+--------------+------+------------+
11 rows in set (0.00 sec)

mysql> SHOW INDEXES FROM HR.EMP;
+-------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table | Non_unique | Key_name   | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+-------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| emp   |          1 | DEPTNO_IDX |            1 | DEPTNO      | A         |           3 |     NULL |   NULL | YES  | BTREE      |         |               | NO      | NULL       |
| emp   |          1 | JOB_IDX1   |            1 | JOB         | A         |           5 |     NULL |   NULL | YES  | BTREE      |         |               | NO      | NULL       |
| emp   |          1 | dj_idx     |            1 | DEPTNO      | A         |           3 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
| emp   |          1 | dj_idx     |            2 | JOB         | A         |           9 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
+-------+------------+------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
4 rows in set (0.01 sec)

mysql> EXPLAIN FORMAT=TREE SELECT DEPTNO FROM DEPT;
+-------------------------------------------------------+
| EXPLAIN                                               |
+-------------------------------------------------------+
| -> Index scan on DEPT using dloc  (cost=0.65 rows=4)
 |
+-------------------------------------------------------+
1 row in set (0.00 sec)

mysql> 
mysql> 
mysql> 
mysql> SELECT * FROM EMP
    -> 
    -> ^C
mysql> 
mysql> SELECT EMPNO,ENAME FROM EMP
    -> 
    -> 
    -> 
    -> 
    -> ^C
mysql> 
mysql> 
mysql> 
mysql> 
mysql> 
mysql> SELECT PROCESSES;
ERROR 1054 (42S22): Unknown column 'PROCESSES' in 'field list'
mysql> SHOW PROCESS;
ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'PROCESS' at line 1
mysql> SELECT PROCESS;
ERROR 1054 (42S22): Unknown column 'PROCESS' in 'field list'
mysql> \! CLS;
